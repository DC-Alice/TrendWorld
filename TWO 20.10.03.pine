// This source code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// ? jchang274
//@version=4
study("TWO",overlay=true,max_bars_back = 5000)

//#######################
//###   System Name   ###
//#######################
RefSwitchInput = input(defval=true,title="Reference Book (ON/OFF)",type=input.bool)
GLlabel=label.new(
     x=bar_index,y=(close[1]+close[20]+close[60]+close[120])/4,
     text="Two Average System\n\n
         Thanks to LEI & LoneCapital\n\n
         使用说明:\n\n
         实线EMA\n\n
         虚线SMA\n\n
         左上角指标?设置功能\n\n 
         右上角?属性关闭边框",
     style=label.style_label_left,color=color.new(color.yellow,transp=100),
     textcolor=color.new(color.silver,transp=60),
     textalign = text.align_center,
     size=size.large)
label.delete(GLlabel[1])
if RefSwitchInput == false
    label.delete(GLlabel)
    
//#######################
//###  GAP Detector  ###
//#######################
GapSwitchInput= input(defval=false,title="? Show Gaps (ON/OFF)",type=input.bool)
GapSwitch = GapSwitchInput?1:0
GapUp1 = (GapSwitch>0 and low>high[1])?line.new(bar_index,low,bar_index[1],high[1],extend=extend.none,color=color.fuchsia,width=2):na
GapUp2 = (GapSwitch>0 and low>high[1])?line.new(bar_index,high[1],bar_index[1],low,extend=extend.none,color=color.fuchsia,width=2):na
GapDown1 = (GapSwitch>0 and high<low[1])?line.new(bar_index,high,bar_index[1],low[1],extend=extend.none,color=color.fuchsia,width=2):na
GapDown2 = (GapSwitch>0 and high<low[1])?line.new(bar_index,low[1],bar_index[1],high,extend=extend.none,color=color.fuchsia,width=2):na

length = 200
width = 1
min_pips=1
gap_start = high[length]
gap_end = low[length - 1]
gap_bull = false
gap_bear = false
inf_gap = 0.0
sup_gap = 0.0

if barstate.islast
    for j = 1 to length
        gap_bull := false
        gap_bear := false
        inf_gap := 0.0
        sup_gap := 0.0
        
        if high[j] < low[j - 1] //bull gap
            gap_start := high[j]
            gap_end := low[j - 1]
            gap_bull := true
            inf_gap := gap_start
            sup_gap := gap_end
            for i = (j-1) to 0
                sup_gap := min(sup_gap, low[i])
            if ((sup_gap - inf_gap)/(syminfo.mintick*10) < min_pips) // only gap > min_pips are considered
                gap_bull := false
                
        if low[j] > high[j - 1] //bear gap
            gap_start := low[j]
            gap_end := high[j - 1]
            gap_bear := true
            inf_gap := gap_end
            sup_gap := gap_start
            for i = (j-1) to 0
                inf_gap := max(inf_gap, high[i])
            if ((sup_gap - inf_gap)/(syminfo.mintick*10) < min_pips) // only gap > min_pips pips are considered
                gap_bear := false
        
        if gap_bull and GapSwitch>0
            line_bull_inf = line.new(x1 = bar_index[j], y1 = inf_gap, 
                                     x2 = bar_index, y2 = inf_gap,
                                     extend=extend.none, color = color.black, style = line.style_dashed, width = width)
            //line.delete(line_bull_inf[1])
            line_bull_sup = line.new(x1 = bar_index[j-1], y1 = sup_gap, 
                                     x2 = bar_index, y2 = sup_gap,
                                     extend=extend.none, color = color.black, style = line.style_dashed, width = width)
            //line.delete(line_bull_sup[1])
        if gap_bear and GapSwitch>0
            line_bear_inf = line.new(x1 = bar_index[j-1], y1 = inf_gap, 
                                     x2 = bar_index, y2 = inf_gap,
                                     extend=extend.none, color = color.black, style = line.style_dashed, width = width)
            //line.delete(line_bear_inf[1])
            line_bear_sup = line.new(x1 = bar_index[j], y1 = sup_gap, 
                                     x2 = bar_index, y2 = sup_gap,
                                     extend=extend.none, color = color.black, style = line.style_dashed, width = width)
            //line.delete(line_bear_sup[1])

//#######################
//###   Price Lable   ###
//#######################
DKJSwitchInput = input(defval=true,title="?? Price Lable Switch (ON/OFF)",type=input.bool)
moveLabel=input(defval=0,title="?? Move Lable Forward",type=input.integer,minval=0,step=5)
DKJSwitch = DKJSwitchInput?1:0
if barstate.islast and DKJSwitch>0
    LA=label.new(
     x=bar_index -moveLabel ,
     y=na,
     yloc=close[0+moveLabel]>close[5+moveLabel]?yloc.abovebar:yloc.belowbar,
     style=close[0+moveLabel]>close[5+moveLabel]?label.style_label_lower_left:label.style_label_upper_left,
     text=tostring(close[0+moveLabel],'#.00'),
     textcolor=color.black,
     color=color.new(color.yellow,50),
     size=size.small)
    label.delete(LA[1])
    //label for short cycle
    LB=label.new(
     x=bar_index[20]-moveLabel ,
     y=na,
     yloc=close[20+moveLabel]>close[20+5+moveLabel]?yloc.abovebar:yloc.belowbar,
     style=close[20+moveLabel]>close[20+5+moveLabel]?label.style_label_lower_right:label.style_label_upper_right,
     text=tostring(close[moveLabel+20],'#.00'),
     color=color.new(color.gray,30),
     textcolor=color.black,
     size=size.small)
    label.delete(LB[1])
    //label for mid cycle
    LC=label.new(
     x=bar_index[60]-moveLabel ,
     y=na,
     yloc=close[60+moveLabel]>close[60+5+moveLabel]?yloc.abovebar:yloc.belowbar,
     style=close[60+moveLabel]>close[60+5+moveLabel]?label.style_label_lower_right:label.style_label_upper_right,
     text=tostring(close[60+moveLabel],'#.00'),
     color=color.new(color.red,30),
     textcolor=color.black,
     size=size.small)
    label.delete(LC[1])
    //label for long cycle
    LD=label.new(
     x=bar_index[120]-moveLabel ,
     y=na,
     yloc=close[120+moveLabel]>close[120+5+moveLabel]?yloc.abovebar:yloc.belowbar,
     style=close[120+moveLabel]>close[120+5+moveLabel]?label.style_label_lower_right:label.style_label_upper_right,
     text=tostring(close[120+moveLabel],'#.00'),
     color=color.new(color.blue,30),
     textcolor=color.black,
     size=size.small)
    label.delete(LD[1])


//#######################################
//### Without Time，You are bullying! ###
//#######################################
TbgSwitchInput = input(defval=false,title="?? Bullying Time (ON/OFF)",type=input.bool)
TbgSwitch = TbgSwitchInput?1:0
moveTime = input(defval=10,title="?? Go! Go! Go!",type=input.integer,minval=3,maxval=20,step=1)
moveTime20 = 20-moveTime
moveTime60 = 60-moveTime
moveTime120 = 120-moveTime
ConTbg = barstate.islast and TbgSwitch>0
bgcolor(ConTbg?color.black:na,transp=75,offset=-20-moveLabel,editable=false)
bgcolor(ConTbg?color.black:na,transp=75,offset=-moveTime20-moveLabel,editable=false)
bgcolor(ConTbg?color.black:na,transp=75,offset=-60-moveLabel,editable=false)
bgcolor(ConTbg?color.black:na,transp=75,offset=-moveTime60-moveLabel,editable=false)
bgcolor(ConTbg?color.black:na,transp=75,offset=-120-moveLabel,editable=false)
bgcolor(ConTbg?color.black:na,transp=75,offset=-moveTime120-moveLabel,editable=false)
if barstate.islast and TbgSwitch>0
    label.new(
     x=bar_index -moveLabel - moveTime20 - 2 ,
     y=na,
     yloc=yloc.abovebar,
     text=tostring(moveTime,'#.##'),
     textcolor=color.black,
     color=color.new(color.yellow,100),
     style=label.style_label_up,
     size=size.normal)
    label.new(
     x=bar_index -moveLabel - moveTime60 - 2 ,
     y=na,
     yloc=yloc.abovebar,
     text=tostring(moveTime,'#.##'),
     textcolor=color.black,
     color=color.new(color.yellow,100),
     style=label.style_label_up,
     size=size.normal)
    label.new(
     x=bar_index -moveLabel - moveTime120 - 2 ,
     y=na,
     yloc=yloc.abovebar,
     text=tostring(moveTime,'#.##'),
     textcolor=color.black,
     color=color.new(color.yellow,100),
     style=label.style_label_up,
     size=size.normal)
   
//###############################   
//###  Moving Average System  ###
//###############################
MaSwitchInput = input(defval=true,title="?? MA System (ON/OFF)",type=input.bool)
MaSwitch = MaSwitchInput?40:100
EmaSwitchInput = input(defval=true,title="?? EMA System (ON/OFF)",type=input.bool)
EmaSwitch = EmaSwitchInput?0:100
plot(ema(close,20),linewidth=1,color=color.black,transp=EmaSwitch,title="EMA20",editable=false)
plot(ema(close,60),linewidth=1,color=color.red,transp=EmaSwitch,title="EMA60",editable=false)
plot(ema(close,120),linewidth=1,color=color.blue,transp=EmaSwitch,title="EMA120",editable=false)
plot(sma(close,20),linewidth=1,color = bar_index % 3 == 0 and not barstate.islast ? color.new(color.white,100):color.black,transp=MaSwitch,title="MA20",style=plot.style_line,editable=false)
plot(sma(close,60),linewidth=1,color = bar_index % 3 == 0 and not barstate.islast ? color.new(color.white,100):color.red,transp=MaSwitch,title="MA60",style=plot.style_line,editable=false)
plot(sma(close,120),linewidth=1,color= bar_index % 3 == 0 and not barstate.islast ? color.new(color.white,100):color.blue,transp=MaSwitch,title="MA120",style=plot.style_line,editable=false)

//############################
//###  Short Trend Change  ###
//############################
Switch=input(defval=true,title="?? Change Candle Color (ON/OFF)",type=input.bool)
SwitchX=Switch?1:0
ConAqua  = close>ema(close,20) and close>sma(close,20) and close>close[20] 
ConBlack = close<ema(close,20) and close<sma(close,20) and close<close[20] 
ConGray  = not(ConAqua and ConBlack)
ChangeColorGray = (ConGray and SwitchX>0) ? color.silver:na
ChangeColorAqua = (ConAqua and SwitchX>0) ? color.aqua:na
ChangeColorBlack = (ConBlack and SwitchX>0) ? color.black:na
barcolor(ChangeColorAqua,editable=false)
barcolor(ChangeColorBlack,editable=false)
barcolor(ChangeColorGray,editable=false)

//######################
//###  10 Days Mark  ###
//######################
MarkSwitchInput = input(defval=false,title="?? 10 Days Mark (ON/OFF)",type=input.bool)
MarkSwitch = MarkSwitchInput?1:-1 
a=10
MarkColor = color.new(color.red,50)
if barstate.islast and MarkSwitch>0
    label.new(bar_index-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-2*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-3*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-4*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-5*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-6*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-7*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-8*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-9*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-10*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-11*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)
    label.new(bar_index-12*a-moveLabel,na,yloc=yloc.belowbar,color=MarkColor,size=size.auto,style=label.style_circle)

//###########################
//###  Yellow Price Mark  ###
//###########################
DKSwitchInput = input(defval=true,title="?? Yellow Price Mark (ON/OFF)",type=input.bool)
DKSwitch = DKSwitchInput?1:0 
ConLeiDK = barstate.islast and DKSwitch>0
plot(ConLeiDK?close[moveLabel]:na,color=color.new(color.yellow,10),linewidth=4,offset=-moveLabel,style=plot.style_circles,editable=false,show_last=1)
plot(ConLeiDK?close[20+moveLabel]:na,color=color.new(color.yellow,10),linewidth=4,offset=-moveLabel-20,style=plot.style_circles,editable=false,show_last=1)
plot(ConLeiDK?close[60+moveLabel]:na,color=color.new(color.yellow,10),linewidth=4,offset=-moveLabel-60,style=plot.style_circles,editable=false,show_last=1)
plot(ConLeiDK?close[120+moveLabel]:na,color=color.new(color.yellow,10),linewidth=4,offset=-moveLabel-120,style=plot.style_circles,editable=false,show_last=1)

//################################
//###  DKJ Vertical Referance  ###
//################################
DKJRefSwitchInput = input(defval=true,title="? DKJ Vertical Ref (ON/OFF)",type=input.bool)
DKJRefSwitch = DKJRefSwitchInput?1:0
ConDJRef = barstate.islast and DKJRefSwitch>0
plot(ConDJRef?close[20+moveLabel]:na,color=color.new(color.black,10),linewidth=3,offset=-moveLabel,style=plot.style_circles,editable=false,show_last=1)
plot(ConDJRef?close[60+moveLabel]:na,color=color.new(color.red,10),linewidth=3,offset=-moveLabel,style=plot.style_circles,editable=false,show_last=1)
plot(ConDJRef?close[120+moveLabel]:na,color=color.new(color.blue,10),linewidth=3,offset=-moveLabel,style=plot.style_circles,editable=false,show_last=1)
